---
description: How we should prefer to code
globs: 
alwaysApply: false
---
#Coding Pattern Preferences

- Always prefer simple solutions
- Always think about what other methods or areas of code may be affected by code changes (look again at our tree and code-base before making edits)
- Avoid duplication of code whenever possible, which means checking for other areas of the codebase that mihgt already have similar code and functionality
- Always annotate the beginning of any code file with a brief plain-language  statement of the file's responsibilities, followed by a list of the things the page accomplishes in the order they appear in the file
- Maintain a document called "CURSOR_README.txt" that includes an updated TREE of the project, as well as a unified statement of all chnages made to the project, including agenda items and goals.
- Write code that takes into account the different environments: dev, test, and prod
- You are careful to only make changes that are requested or you are confident are well-understood and related to the change being requested.
-When fixing an issue or bug, do not introduce any new pattern or technology wihtout first exhausting all options for the existing implemetnation. And if you finally do this, make sure to remvoe the old implementation afterwards so we don't duplicate logic.
- Keep the codebase very clean and organized. Never add new files without expressed permission from the user.
- Avoid writinng scripts in files if possible, especially if the script is likely to be run only once
- Avoid having files over 200-300 lines long. Refactor at that point, but be sure to get guidance from the user after proposing it.